//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace GeoOrleans.Runtime.OrleansPileus.Interfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    using Microsoft.WindowsAzure.Storage.Blob;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ConfiguratorFactory
    {
        

                        public static GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator), 1444308113, primaryKey));
                        }

                        public static GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator), 1444308113, primaryKey, grainClassNamePrefix));
                        }

            public static GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ConfiguratorReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("GeoOrleans.Runtime.OrleansPileus.Interfaces.GeoOrleans.Runtime.OrleansPileus.Inte" +
            "rfaces.IConfigurator")]
        internal class ConfiguratorReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator
        {
            

            public static GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator) global::Orleans.Runtime.GrainReference.CastInternal(typeof(GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator), (global::Orleans.Runtime.GrainReference gr) => { return new ConfiguratorReference(gr);}, grainRef, 1444308113);
            }
            
            protected internal ConfiguratorReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ConfiguratorReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1444308113;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "GeoOrleans.Runtime.OrleansPileus.Interfaces.GeoOrleans.Runtime.OrleansPileus.Inte" +
                        "rfaces.IConfigurator";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ConfiguratorReference input = ((ConfiguratorReference)(original));
                return ((ConfiguratorReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ConfiguratorReference input = ((ConfiguratorReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ConfiguratorReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ConfiguratorMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator.forceReconfigure()
            {

                return base.InvokeMethodAsync<object>(-351531848, null );
            }
            
            System.Threading.Tasks.Task GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator.startConfigurator()
            {

                return base.InvokeMethodAsync<object>(-1713106890, null );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>> GeoOrleans.Runtime.OrleansPileus.Interfaces.IConfigurator.getContainers()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<System.String,Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer>>(-2085797267, null );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("GeoOrleans.Runtime.OrleansPileus.Interfaces.GeoOrleans.Runtime.OrleansPileus.Inte" +
        "rfaces.IConfigurator", 1444308113)]
    internal class ConfiguratorMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1444308113;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1444308113:  // IConfigurator
                        switch (methodId)
                        {
                            case -351531848: 
                                return ((IConfigurator)grain).forceReconfigure().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1713106890: 
                                return ((IConfigurator)grain).startConfigurator().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2085797267: 
                                return ((IConfigurator)grain).getContainers().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1444308113:  // IConfigurator
                    switch (methodId)
                    {
                        case -351531848:
                            return "forceReconfigure";
                    case -1713106890:
                            return "startConfigurator";
                    case -2085797267:
                            return "getContainers";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
namespace GeoOrleans.Runtime.OrleansPileus.InterfacesSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Microsoft.WindowsAzure.Storage.Blob;
    using Microsoft.WindowsAzure.Storage;
    using Microsoft.WindowsAzure.Storage.Auth;
    using Microsoft.WindowsAzure.Storage.Auth.Protocol;
    using Microsoft.WindowsAzure.Storage.RetryPolicies;
    using System.Runtime.Serialization;
    using System.Collections;
    using System.Threading.Tasks;
    using System.Threading;
    using System.Xml.Serialization;
    using System.Runtime.InteropServices;
    using Microsoft.WindowsAzure.Storage.Shared.Protocol;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_Blob_CloudBlobContainerSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        static Microsoft_WindowsAzure_Storage_Blob_CloudBlobContainerSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer input = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer)(original));
            Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer result = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Metadata)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.Name;
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Properties)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ServiceClient)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Microsoft.WindowsAzure.Storage.StorageUri)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.StorageUri)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer input = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Metadata, stream, typeof(System.Collections.Generic.IDictionary<System.String,System.String>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Properties, stream, typeof(Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ServiceClient, stream, typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StorageUri, stream, typeof(Microsoft.WindowsAzure.Storage.StorageUri));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer result = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer))));
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.IDictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.IDictionary<System.String,System.String>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Microsoft.WindowsAzure.Storage.StorageUri)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.StorageUri), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetField("<Metadata>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetField("<Name>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetField("<Properties>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetField("<ServiceClient>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobContainer).GetField("<StorageUri>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_Blob_BlobContainerPropertiesSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        static Microsoft_WindowsAzure_Storage_Blob_BlobContainerPropertiesSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties input = ((Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties)(original));
            Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties result = new Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = input.ETag;
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((System.Nullable<System.DateTimeOffset>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LastModified)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = input.LeaseDuration;
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = input.LeaseState;
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = input.LeaseStatus;
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties input = ((Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ETag, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LastModified, stream, typeof(System.Nullable<System.DateTimeOffset>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LeaseDuration, stream, typeof(Microsoft.WindowsAzure.Storage.Blob.LeaseDuration));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LeaseState, stream, typeof(Microsoft.WindowsAzure.Storage.Blob.LeaseState));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LeaseStatus, stream, typeof(Microsoft.WindowsAzure.Storage.Blob.LeaseStatus));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties result = new Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties();
            object objResult = ((object)(result));
            object temp1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((System.Nullable<System.DateTimeOffset>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.DateTimeOffset>), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Microsoft.WindowsAzure.Storage.Blob.LeaseDuration)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.Blob.LeaseDuration), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Microsoft.WindowsAzure.Storage.Blob.LeaseState)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.Blob.LeaseState), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Microsoft.WindowsAzure.Storage.Blob.LeaseStatus)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.Blob.LeaseStatus), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties).GetField("<ETag>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties).GetField("<LastModified>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties).GetField("<LeaseDuration>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties).GetField("<LeaseState>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties).GetField("<LeaseStatus>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_Blob_CloudBlobClientSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        static Microsoft_WindowsAzure_Storage_Blob_CloudBlobClientSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient input = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient)(original));
            Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient result = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.BufferManager = ((Microsoft.WindowsAzure.Storage.IBufferManager)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.BufferManager)));
            object objResult = ((object)(result));
            object temp2 = ((Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Credentials)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.DefaultRequestOptions)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Microsoft.WindowsAzure.Storage.StorageUri)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.StorageUri)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = fieldInfo5.GetValue(input);
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((Microsoft.WindowsAzure.Storage.Auth.Protocol.IAuthenticationHandler)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo6.GetValue(input))));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = fieldInfo7.GetValue(input);
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = fieldInfo8.GetValue(input);
            fieldInfo8.SetValue(objResult, temp8);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient input = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BufferManager, stream, typeof(Microsoft.WindowsAzure.Storage.IBufferManager));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Credentials, stream, typeof(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DefaultRequestOptions, stream, typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StorageUri, stream, typeof(Microsoft.WindowsAzure.Storage.StorageUri));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(Microsoft.WindowsAzure.Storage.Auth.Protocol.IAuthenticationHandler));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo7.GetValue(input), stream, typeof(Microsoft.WindowsAzure.Storage.AuthenticationScheme));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo8.GetValue(input), stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient result = ((Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient))));
            result.BufferManager = ((Microsoft.WindowsAzure.Storage.IBufferManager)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.IBufferManager), stream)));
            object objResult = ((object)(result));
            object temp2 = ((Microsoft.WindowsAzure.Storage.Auth.StorageCredentials)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Microsoft.WindowsAzure.Storage.StorageUri)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.StorageUri), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((Microsoft.WindowsAzure.Storage.Auth.Protocol.IAuthenticationHandler)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.Auth.Protocol.IAuthenticationHandler), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((Microsoft.WindowsAzure.Storage.AuthenticationScheme)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.AuthenticationScheme), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient), DeepCopier, Serializer, Deserializer);
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient).GetField("<Credentials>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient).GetField("<DefaultRequestOptions>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient).GetField("<StorageUri>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient).GetField("<UsePathStyleUris>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient).GetField("authenticationHandler", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient).GetField("authenticationScheme", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient).GetField("defaultDelimiter", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_Blob_BlobRequestOptionsSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        private static System.Reflection.FieldInfo fieldInfo7;
        
        private static System.Reflection.FieldInfo fieldInfo8;
        
        private static System.Reflection.FieldInfo fieldInfo9;
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        static Microsoft_WindowsAzure_Storage_Blob_BlobRequestOptionsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions input = ((Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)(original));
            Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions result = new Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.LocationMode = ((System.Nullable<Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LocationMode)));
            object objResult = ((object)(result));
            object temp2 = ((System.Nullable<System.DateTime>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo2.GetValue(input))));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.RetryPolicy)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Nullable<System.TimeSpan>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ServerTimeout)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo5.GetValue(input))));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Nullable<System.TimeSpan>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo6.GetValue(input))));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.Nullable<System.Int32>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo7.GetValue(input))));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((System.Nullable<System.Int64>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo8.GetValue(input))));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo9.GetValue(input))));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo10.GetValue(input))));
            fieldInfo10.SetValue(objResult, temp10);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions input = ((Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LocationMode, stream, typeof(System.Nullable<Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(System.Nullable<System.DateTime>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RetryPolicy, stream, typeof(Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ServerTimeout, stream, typeof(System.Nullable<System.TimeSpan>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(System.Nullable<System.Boolean>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(System.Nullable<System.TimeSpan>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo7.GetValue(input), stream, typeof(System.Nullable<System.Int32>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo8.GetValue(input), stream, typeof(System.Nullable<System.Int64>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo9.GetValue(input), stream, typeof(System.Nullable<System.Boolean>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo10.GetValue(input), stream, typeof(System.Nullable<System.Boolean>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions result = new Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions();
            result.LocationMode = ((System.Nullable<Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode>), stream)));
            object objResult = ((object)(result));
            object temp2 = ((System.Nullable<System.DateTime>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.DateTime>), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((System.Nullable<System.TimeSpan>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.TimeSpan>), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Boolean>), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((System.Nullable<System.TimeSpan>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.TimeSpan>), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            object temp7 = ((System.Nullable<System.Int32>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Int32>), stream)));
            fieldInfo7.SetValue(objResult, temp7);
            object temp8 = ((System.Nullable<System.Int64>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Int64>), stream)));
            fieldInfo8.SetValue(objResult, temp8);
            object temp9 = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Boolean>), stream)));
            fieldInfo9.SetValue(objResult, temp9);
            object temp10 = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Boolean>), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions), DeepCopier, Serializer, Deserializer);
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions).GetField("<OperationExpiryTime>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions).GetField("<RetryPolicy>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions).GetField("<ServerTimeout>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions).GetField("disableContentMD5Validation", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions).GetField("maximumExecutionTime", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo7 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions).GetField("parallelOperationThreadCount", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo8 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions).GetField("singleBlobUploadThresholdInBytes", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo9 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions).GetField("storeBlobContentMD5", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo10 = typeof(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions).GetField("useTransactionalMD5", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Microsoft_WindowsAzure_Storage_StorageUriSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static Microsoft_WindowsAzure_Storage_StorageUriSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Microsoft.WindowsAzure.Storage.StorageUri input = ((Microsoft.WindowsAzure.Storage.StorageUri)(original));
            Microsoft.WindowsAzure.Storage.StorageUri result = ((Microsoft.WindowsAzure.Storage.StorageUri)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.StorageUri))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Uri)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((System.Uri)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo2.GetValue(input))));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Microsoft.WindowsAzure.Storage.StorageUri input = ((Microsoft.WindowsAzure.Storage.StorageUri)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Uri));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(System.Uri));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Microsoft.WindowsAzure.Storage.StorageUri result = ((Microsoft.WindowsAzure.Storage.StorageUri)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(Microsoft.WindowsAzure.Storage.StorageUri))));
            object objResult = ((object)(result));
            object temp1 = ((System.Uri)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Uri), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((System.Uri)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Uri), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Microsoft.WindowsAzure.Storage.StorageUri), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(Microsoft.WindowsAzure.Storage.StorageUri).GetField("primaryUri", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(Microsoft.WindowsAzure.Storage.StorageUri).GetField("secondaryUri", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
