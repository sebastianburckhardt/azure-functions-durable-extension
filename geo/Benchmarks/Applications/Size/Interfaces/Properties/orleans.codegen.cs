//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 414
#pragma warning disable 649
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace GeoOrleans.Benchmarks.Size.Interfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SequencedSizeGrainFactory
    {
        

                        public static GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain), -1250038250, primaryKey));
                        }

                        public static GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain), -1250038250, primaryKey, grainClassNamePrefix));
                        }

                        public static GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain), -1250038250, primaryKey));
                        }

                        public static GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain), -1250038250, primaryKey, grainClassNamePrefix));
                        }

            public static GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SequencedSizeGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("GeoOrleans.Benchmarks.Size.Interfaces.GeoOrleans.Benchmarks.Size.Interfaces.ISequ" +
            "encedSizeGrain")]
        internal class SequencedSizeGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain
        {
            

            public static GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SequencedSizeGrainReference(gr);}, grainRef, -1250038250);
            }
            
            protected internal SequencedSizeGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SequencedSizeGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1250038250;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "GeoOrleans.Benchmarks.Size.Interfaces.GeoOrleans.Benchmarks.Size.Interfaces.ISequ" +
                        "encedSizeGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SequencedSizeGrainReference input = ((SequencedSizeGrainReference)(original));
                return ((SequencedSizeGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SequencedSizeGrainReference input = ((SequencedSizeGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SequencedSizeGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SequencedSizeGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain.WriteNow(byte[] @payload)
            {

                return base.InvokeMethodAsync<object>(1265555961, new object[] {@payload} );
            }
            
            System.Threading.Tasks.Task GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain.WriteLater(byte[] @payload)
            {

                return base.InvokeMethodAsync<object>(-2080698042, new object[] {@payload} );
            }
            
            System.Threading.Tasks.Task<byte[]> GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain.ReadApprox(string @reqId)
            {

                return base.InvokeMethodAsync<System.Byte[]>(838859180, new object[] {@reqId} );
            }
            
            System.Threading.Tasks.Task<byte[]> GeoOrleans.Benchmarks.Size.Interfaces.ISequencedSizeGrain.ReadCurrent(string @reqId)
            {

                return base.InvokeMethodAsync<System.Byte[]>(1786814010, new object[] {@reqId} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("GeoOrleans.Benchmarks.Size.Interfaces.GeoOrleans.Benchmarks.Size.Interfaces.ISequ" +
        "encedSizeGrain", -1250038250)]
    internal class SequencedSizeGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1250038250;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1250038250:  // ISequencedSizeGrain
                        switch (methodId)
                        {
                            case 1265555961: 
                                return ((ISequencedSizeGrain)grain).WriteNow((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -2080698042: 
                                return ((ISequencedSizeGrain)grain).WriteLater((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 838859180: 
                                return ((ISequencedSizeGrain)grain).ReadApprox((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1786814010: 
                                return ((ISequencedSizeGrain)grain).ReadCurrent((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1250038250:  // ISequencedSizeGrain
                    switch (methodId)
                    {
                        case 1265555961:
                            return "WriteNow";
                    case -2080698042:
                            return "WriteLater";
                    case 838859180:
                            return "ReadApprox";
                    case 1786814010:
                            return "ReadCurrent";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SizeGrainFactory
    {
        

                        public static GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain), 861917161, primaryKey));
                        }

                        public static GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain), 861917161, primaryKey, grainClassNamePrefix));
                        }

                        public static GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain), 861917161, primaryKey));
                        }

                        public static GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain), 861917161, primaryKey, grainClassNamePrefix));
                        }

            public static GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return SizeGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("GeoOrleans.Benchmarks.Size.Interfaces.GeoOrleans.Benchmarks.Size.Interfaces.ISize" +
            "Grain")]
        internal class SizeGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain
        {
            

            public static GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain), (global::Orleans.Runtime.GrainReference gr) => { return new SizeGrainReference(gr);}, grainRef, 861917161);
            }
            
            protected internal SizeGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal SizeGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 861917161;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "GeoOrleans.Benchmarks.Size.Interfaces.GeoOrleans.Benchmarks.Size.Interfaces.ISize" +
                        "Grain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SizeGrainReference input = ((SizeGrainReference)(original));
                return ((SizeGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SizeGrainReference input = ((SizeGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SizeGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return SizeGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<byte[]> GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain.Read(string @reqId)
            {

                return base.InvokeMethodAsync<System.Byte[]>(-855882649, new object[] {@reqId} );
            }
            
            System.Threading.Tasks.Task GeoOrleans.Benchmarks.Size.Interfaces.ISizeGrain.Write(byte[] @payload)
            {

                return base.InvokeMethodAsync<object>(-96513409, new object[] {@payload} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.8.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("GeoOrleans.Benchmarks.Size.Interfaces.GeoOrleans.Benchmarks.Size.Interfaces.ISize" +
        "Grain", 861917161)]
    internal class SizeGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 861917161;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 861917161:  // ISizeGrain
                        switch (methodId)
                        {
                            case -855882649: 
                                return ((ISizeGrain)grain).Read((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -96513409: 
                                return ((ISizeGrain)grain).Write((Byte[])arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 861917161:  // ISizeGrain
                    switch (methodId)
                    {
                        case -855882649:
                            return "Read";
                    case -96513409:
                            return "Write";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 649
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
